syntax = "proto3";

import "google/protobuf/field_mask.proto";
import "google/protobuf/empty.proto";
import "validate/validate.proto"; // Импорт для валидации

package task_category;

option go_package = "dovgalb.task_category.v1/task_category;task_category_v1";

// Сервис для управления категориями задач
service TaskCategory {
  rpc CreateTaskCategory (CreateTaskCategoryRequest) returns (CreateTaskCategoryResponse);
  rpc ReadTaskCategory (ReadTaskCategoryRequest) returns (TaskCategoryResponse);
  rpc UpdateTaskCategory (UpdateTaskCategoryRequest) returns (TaskCategoryResponse);
  rpc DeleteTaskCategory (DeleteTaskCategoryRequest) returns (google.protobuf.Empty);
}

// Запрос на создание категории задач
message CreateTaskCategoryRequest {
  string title = 1 [(validate.rules).string = {min_len: 1, max_len: 100}]; // Заголовок от 1 до 100 символов
}

// Ответ на создание категории задач
message CreateTaskCategoryResponse {
  int64 task_category_id = 1;
}

// Запрос на чтение категории задач
message ReadTaskCategoryRequest {
  int64 task_category_id = 1 [(validate.rules).int64 = {gt: 0}]; // ID категории должен быть положительным
}

// Ответ с данными категории задач
message TaskCategoryResponse {
  int64 task_category_id = 1;
  string title = 2;
}

// Запрос на обновление категории задач
message UpdateTaskCategoryRequest {
  int64 task_category_id = 1 [(validate.rules).int64 = {gt: 0}]; // ID категории должен быть положительным
  string title = 2 [(validate.rules).string = {min_len: 1, max_len: 100}]; // Заголовок от 1 до 100 символов
  google.protobuf.FieldMask update_mask = 3;
}

// Запрос на удаление категории задач
message DeleteTaskCategoryRequest {
  int64 task_category_id = 1 [(validate.rules).int64 = {gt: 0}]; // ID категории должен быть положительным
}